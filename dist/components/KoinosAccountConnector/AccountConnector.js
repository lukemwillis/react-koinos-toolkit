"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = AccountConnector;
var _react = _interopRequireWildcard(require("react"));
var _react2 = require("@chakra-ui/react");
var _AccountProvider = require("../KoinosAccountProvider/AccountProvider");
var _icons = require("@chakra-ui/icons");
var _Avatar = _interopRequireDefault(require("./Avatar"));
var _SearchBox = _interopRequireDefault(require("./SearchBox"));
var _ConnectWallet = _interopRequireDefault(require("./ConnectWallet"));
var _ProfileProvider = require("../KoinosAccountProvider/ProfileProvider");
var _NameServiceProvider = require("../KoinosAccountProvider/NameServiceProvider");
var _CTA = _interopRequireDefault(require("./CTA"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
function AccountConnector(_ref) {
  var onConnect = _ref.onConnect,
    sitePreferences = _ref.sitePreferences;
  var _useAccount = (0, _AccountProvider.useAccount)(),
    address = _useAccount.address,
    isConnecting = _useAccount.isConnecting;
  var _useNameService = (0, _NameServiceProvider.useNameService)(),
    names = _useNameService.names;
  var _useProfile = (0, _ProfileProvider.useProfile)(),
    profile = _useProfile.profile;
  var _useDisclosure = (0, _react2.useDisclosure)(),
    onOpen = _useDisclosure.onOpen,
    onClose = _useDisclosure.onClose,
    isOpen = _useDisclosure.isOpen;
  var _useClipboard = (0, _react2.useClipboard)(address || ""),
    onCopy = _useClipboard.onCopy,
    setValue = _useClipboard.setValue,
    hasCopied = _useClipboard.hasCopied;
  var inputRef = (0, _react.useRef)(null);
  (0, _react.useEffect)(function () {
    if (address) {
      setValue(address);
    }
  }, [address, setValue]);
  return /*#__PURE__*/_react.default.createElement(_react2.Popover, {
    isOpen: isOpen,
    onOpen: onOpen,
    onClose: onClose,
    placement: "bottom-end",
    initialFocusRef: inputRef
  }, /*#__PURE__*/_react.default.createElement(_react2.PopoverTrigger, null, /*#__PURE__*/_react.default.createElement(_react2.Button, {
    variant: address ? "ghost" : "outline",
    isLoading: isConnecting,
    minWidth: "unset",
    height: "auto",
    padding: address ? "2" : "3.5",
    borderColor: (0, _react2.useColorModeValue)("gray.800", "white")
  }, address && !isConnecting ? /*#__PURE__*/_react.default.createElement(_react2.Flex, {
    gap: "2",
    alignItems: "center"
  }, /*#__PURE__*/_react.default.createElement(_react2.Box, {
    position: "relative"
  }, /*#__PURE__*/_react.default.createElement(_Avatar.default, {
    size: "2.6em"
  }), names.length > 0 && !(profile !== null && profile !== void 0 && profile.name) && /*#__PURE__*/_react.default.createElement(_icons.WarningIcon, {
    color: "brand.orange",
    position: "absolute",
    top: "-1",
    right: "-1"
  })), /*#__PURE__*/_react.default.createElement(_react2.Stack, {
    alignItems: "start",
    lineHeight: "1"
  }, (profile === null || profile === void 0 ? void 0 : profile.name) && /*#__PURE__*/_react.default.createElement(_react2.Text, {
    fontSize: "1.2em"
  }, profile.name), /*#__PURE__*/_react.default.createElement(_react2.Text, {
    fontSize: profile !== null && profile !== void 0 && profile.name ? "0.9em" : "1.3em",
    color: "gray.500",
    fontWeight: "normal"
  }, address.substring(0, 4), "...", address.substring(address.length - 4)))) : /*#__PURE__*/_react.default.createElement(_react2.Text, {
    fontWeight: "bold"
  }, "Connect Wallet"))), /*#__PURE__*/_react.default.createElement(_react2.PopoverContent, {
    width: "auto",
    maxWidth: "100vw",
    boxShadow: "lg"
  }, /*#__PURE__*/_react.default.createElement(_react2.PopoverBody, {
    padding: "3"
  }, /*#__PURE__*/_react.default.createElement(_react2.Stack, {
    spacing: "2"
  }, address && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_react2.Flex, {
    direction: "column",
    alignItems: "center",
    gap: "4"
  }, /*#__PURE__*/_react.default.createElement(_Avatar.default, {
    size: "8em"
  }), profile !== null && profile !== void 0 && profile.name ? /*#__PURE__*/_react.default.createElement(_react2.Text, {
    fontSize: "1.5em",
    lineHeight: "1"
  }, profile.name) : names.length === 0 && /*#__PURE__*/_react.default.createElement(_SearchBox.default, {
    placeholder: "Pick a username...",
    buttonLabel: "Search",
    inlineButton: true,
    onSearch: onClose,
    inputRef: inputRef
  }), /*#__PURE__*/_react.default.createElement(_react2.Flex, {
    borderColor: "gray.500",
    borderWidth: "1px",
    borderRadius: 8,
    alignItems: "center",
    paddingLeft: "2",
    color: "gray.500",
    gap: "1"
  }, /*#__PURE__*/_react.default.createElement(_react2.Text, {
    fontSize: "0.9em",
    overflowWrap: "anywhere"
  }, address), /*#__PURE__*/_react.default.createElement(_react2.IconButton, {
    "aria-label": hasCopied ? "Copied!" : "Copy",
    onClick: onCopy,
    size: "sm",
    variant: "ghost",
    color: "gray.500"
  }, hasCopied ? /*#__PURE__*/_react.default.createElement(_icons.CheckIcon, null) : /*#__PURE__*/_react.default.createElement(_icons.CopyIcon, null))), names.length > 0 && /*#__PURE__*/_react.default.createElement("a", {
    href: "https://kap.domains/account"
  }, profile !== null && profile !== void 0 && profile.name ? /*#__PURE__*/_react.default.createElement(_react2.Button, {
    variant: "outline",
    onClick: onClose
  }, "Manage KAP Account") : /*#__PURE__*/_react.default.createElement(_CTA.default, {
    size: "md",
    onClick: onClose,
    label: "Set Up Your KAP Account"
  }))), sitePreferences && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_react2.StackDivider, {
    display: "flex",
    alignItems: "center",
    gap: "2",
    color: "gray.500",
    _before: {
      background: "gray.500",
      content: '""',
      flexGrow: 1,
      height: "1px"
    },
    _after: {
      background: "gray.500",
      content: '""',
      flexGrow: 1,
      height: "1px"
    }
  }, "site preferences"), sitePreferences), /*#__PURE__*/_react.default.createElement(_react2.StackDivider, {
    display: "flex",
    alignItems: "center",
    gap: "2",
    color: "gray.500",
    _before: {
      background: "gray.500",
      content: '""',
      flexGrow: 1,
      height: "1px"
    },
    _after: {
      background: "gray.500",
      content: '""',
      flexGrow: 1,
      height: "1px"
    }
  }, "connect another wallet")), /*#__PURE__*/_react.default.createElement(_ConnectWallet.default, {
    onConnect: onConnect,
    onClick: onClose
  })))));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,