"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KoinosAccountProvider = void 0;
Object.defineProperty(exports, "useAccount", {
  enumerable: true,
  get: function get() {
    return _AccountProvider.useAccount;
  }
});
Object.defineProperty(exports, "useNameService", {
  enumerable: true,
  get: function get() {
    return _NameServiceProvider.useNameService;
  }
});
Object.defineProperty(exports, "useProfile", {
  enumerable: true,
  get: function get() {
    return _ProfileProvider.useProfile;
  }
});
var _react = _interopRequireDefault(require("react"));
var _AccountProvider = require("./AccountProvider");
var _NameServiceProvider = require("./NameServiceProvider");
var _ProfileProvider = require("./ProfileProvider");
var _react2 = require("@chakra-ui/react");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
var KoinosAccountProvider = function KoinosAccountProvider(_ref) {
  var defaultRpcUrl = _ref.defaultRpcUrl,
    kapNameServiceAddress = _ref.kapNameServiceAddress,
    kapProfileAddress = _ref.kapProfileAddress,
    children = _ref.children;
  return /*#__PURE__*/_react.default.createElement(_react2.ChakraProvider, null, /*#__PURE__*/_react.default.createElement(_AccountProvider.AccountProvider, {
    defaultRpcUrl: defaultRpcUrl
  }, /*#__PURE__*/_react.default.createElement(_NameServiceProvider.NameServiceProvider, {
    kapNameServiceAddress: kapNameServiceAddress
  }, /*#__PURE__*/_react.default.createElement(_ProfileProvider.ProfileProvider, {
    kapProfileAddress: kapProfileAddress
  }, children))));
};
exports.KoinosAccountProvider = KoinosAccountProvider;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9BY2NvdW50UHJvdmlkZXIiLCJfTmFtZVNlcnZpY2VQcm92aWRlciIsIl9Qcm9maWxlUHJvdmlkZXIiLCJfcmVhY3QyIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJLb2lub3NBY2NvdW50UHJvdmlkZXIiLCJfcmVmIiwiZGVmYXVsdFJwY1VybCIsImthcE5hbWVTZXJ2aWNlQWRkcmVzcyIsImthcFByb2ZpbGVBZGRyZXNzIiwiY2hpbGRyZW4iLCJjcmVhdGVFbGVtZW50IiwiQ2hha3JhUHJvdmlkZXIiLCJBY2NvdW50UHJvdmlkZXIiLCJOYW1lU2VydmljZVByb3ZpZGVyIiwiUHJvZmlsZVByb3ZpZGVyIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL0tvaW5vc0FjY291bnRQcm92aWRlci9pbmRleC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQWNjb3VudFByb3ZpZGVyIH0gZnJvbSBcIi4vQWNjb3VudFByb3ZpZGVyXCI7XG5pbXBvcnQgeyBOYW1lU2VydmljZVByb3ZpZGVyIH0gZnJvbSBcIi4vTmFtZVNlcnZpY2VQcm92aWRlclwiO1xuaW1wb3J0IHsgUHJvZmlsZVByb3ZpZGVyIH0gZnJvbSBcIi4vUHJvZmlsZVByb3ZpZGVyXCI7XG5pbXBvcnQgeyBDaGFrcmFQcm92aWRlciB9IGZyb20gXCJAY2hha3JhLXVpL3JlYWN0XCI7XG5cbmV4cG9ydCBjb25zdCBLb2lub3NBY2NvdW50UHJvdmlkZXIgPSAoe1xuICBkZWZhdWx0UnBjVXJsLFxuICBrYXBOYW1lU2VydmljZUFkZHJlc3MsXG4gIGthcFByb2ZpbGVBZGRyZXNzLFxuICBjaGlsZHJlbixcbn0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8Q2hha3JhUHJvdmlkZXI+XG4gICAgICA8QWNjb3VudFByb3ZpZGVyIGRlZmF1bHRScGNVcmw9e2RlZmF1bHRScGNVcmx9PlxuICAgICAgICA8TmFtZVNlcnZpY2VQcm92aWRlciBrYXBOYW1lU2VydmljZUFkZHJlc3M9e2thcE5hbWVTZXJ2aWNlQWRkcmVzc30+XG4gICAgICAgICAgPFByb2ZpbGVQcm92aWRlciBrYXBQcm9maWxlQWRkcmVzcz17a2FwUHJvZmlsZUFkZHJlc3N9PlxuICAgICAgICAgICAge2NoaWxkcmVufVxuICAgICAgICAgIDwvUHJvZmlsZVByb3ZpZGVyPlxuICAgICAgICA8L05hbWVTZXJ2aWNlUHJvdmlkZXI+XG4gICAgICA8L0FjY291bnRQcm92aWRlcj5cbiAgICA8L0NoYWtyYVByb3ZpZGVyPlxuICApO1xufTtcblxuZXhwb3J0IHsgdXNlQWNjb3VudCB9IGZyb20gXCIuL0FjY291bnRQcm92aWRlclwiO1xuZXhwb3J0IHsgdXNlTmFtZVNlcnZpY2UgfSBmcm9tIFwiLi9OYW1lU2VydmljZVByb3ZpZGVyXCI7XG5leHBvcnQgeyB1c2VQcm9maWxlIH0gZnJvbSBcIi4vUHJvZmlsZVByb3ZpZGVyXCI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLGdCQUFBLEdBQUFELE9BQUE7QUFDQSxJQUFBRSxvQkFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsZ0JBQUEsR0FBQUgsT0FBQTtBQUNBLElBQUFJLE9BQUEsR0FBQUosT0FBQTtBQUFrRCxTQUFBRCx1QkFBQU0sR0FBQSxXQUFBQSxHQUFBLElBQUFBLEdBQUEsQ0FBQUMsVUFBQSxHQUFBRCxHQUFBLEtBQUFFLE9BQUEsRUFBQUYsR0FBQTtBQUUzQyxJQUFNRyxxQkFBcUIsR0FBRyxTQUF4QkEscUJBQXFCQSxDQUFBQyxJQUFBLEVBSzVCO0VBQUEsSUFKSkMsYUFBYSxHQUFBRCxJQUFBLENBQWJDLGFBQWE7SUFDYkMscUJBQXFCLEdBQUFGLElBQUEsQ0FBckJFLHFCQUFxQjtJQUNyQkMsaUJBQWlCLEdBQUFILElBQUEsQ0FBakJHLGlCQUFpQjtJQUNqQkMsUUFBUSxHQUFBSixJQUFBLENBQVJJLFFBQVE7RUFFUixvQkFDRWYsTUFBQSxDQUFBUyxPQUFBLENBQUFPLGFBQUEsQ0FBQ1YsT0FBQSxDQUFBVyxjQUFjLHFCQUNiakIsTUFBQSxDQUFBUyxPQUFBLENBQUFPLGFBQUEsQ0FBQ2IsZ0JBQUEsQ0FBQWUsZUFBZTtJQUFDTixhQUFhLEVBQUVBO0VBQWMsZ0JBQzVDWixNQUFBLENBQUFTLE9BQUEsQ0FBQU8sYUFBQSxDQUFDWixvQkFBQSxDQUFBZSxtQkFBbUI7SUFBQ04scUJBQXFCLEVBQUVBO0VBQXNCLGdCQUNoRWIsTUFBQSxDQUFBUyxPQUFBLENBQUFPLGFBQUEsQ0FBQ1gsZ0JBQUEsQ0FBQWUsZUFBZTtJQUFDTixpQkFBaUIsRUFBRUE7RUFBa0IsR0FDbkRDLFFBQ2MsQ0FDRSxDQUNOLENBQ0gsQ0FBQztBQUVyQixDQUFDO0FBQUNNLE9BQUEsQ0FBQVgscUJBQUEsR0FBQUEscUJBQUEifQ==